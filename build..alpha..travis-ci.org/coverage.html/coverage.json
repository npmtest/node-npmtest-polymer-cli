{"/home/travis/build/npmtest/node-npmtest-polymer-cli/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_polymer_cli */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/lib.npmtest_polymer_cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/lib.npmtest_polymer_cli.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_polymer_cli */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_polymer_cli = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_polymer_cli = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-polymer-cli && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_polymer_cli */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_polymer_cli","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_polymer_cli.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_polymer_cli.rollup.js'] =","            local.assetsDict['/assets.npmtest_polymer_cli.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_polymer_cli.__dirname + '/lib.npmtest_polymer_cli.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/polymer-cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/polymer-cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":30}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":14},"end":{"line":65,"column":24}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":20},"end":{"line":69,"column":39}}},"4":{"name":"(anonymous_4)","line":111,"loc":{"start":{"line":111,"column":7},"end":{"line":111,"column":10}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":45}},"13":{"start":{"line":23,"column":0},"end":{"line":28,"column":3}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":49}},"15":{"start":{"line":25,"column":4},"end":{"line":26,"column":34}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":20}},"18":{"start":{"line":29,"column":0},"end":{"line":34,"column":3}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":48}},"20":{"start":{"line":31,"column":4},"end":{"line":32,"column":34}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":34}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"24":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":31}},"26":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":33}},"28":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":50}},"30":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"31":{"start":{"line":51,"column":12},"end":{"line":51,"column":40}},"32":{"start":{"line":52,"column":12},"end":{"line":52,"column":106}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":95}},"34":{"start":{"line":56,"column":12},"end":{"line":56,"column":90}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":52}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":63}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":50}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":50}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":52}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":50}},"41":{"start":{"line":66,"column":8},"end":{"line":66,"column":53}},"42":{"start":{"line":67,"column":8},"end":{"line":67,"column":49}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":35}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":33}},"45":{"start":{"line":72,"column":8},"end":{"line":104,"column":10}},"46":{"start":{"line":73,"column":12},"end":{"line":103,"column":13}},"47":{"start":{"line":74,"column":16},"end":{"line":74,"column":43}},"48":{"start":{"line":75,"column":16},"end":{"line":75,"column":57}},"49":{"start":{"line":76,"column":16},"end":{"line":95,"column":17}},"50":{"start":{"line":77,"column":20},"end":{"line":77,"column":64}},"51":{"start":{"line":80,"column":20},"end":{"line":80,"column":76}},"52":{"start":{"line":81,"column":20},"end":{"line":92,"column":21}},"53":{"start":{"line":82,"column":24},"end":{"line":83,"column":37}},"54":{"start":{"line":83,"column":28},"end":{"line":83,"column":37}},"55":{"start":{"line":84,"column":24},"end":{"line":84,"column":61}},"56":{"start":{"line":85,"column":24},"end":{"line":85,"column":62}},"57":{"start":{"line":86,"column":24},"end":{"line":91,"column":25}},"58":{"start":{"line":87,"column":28},"end":{"line":87,"column":67}},"59":{"start":{"line":90,"column":28},"end":{"line":90,"column":117}},"60":{"start":{"line":93,"column":20},"end":{"line":93,"column":59}},"61":{"start":{"line":94,"column":20},"end":{"line":94,"column":50}},"62":{"start":{"line":96,"column":16},"end":{"line":102,"column":17}},"63":{"start":{"line":97,"column":20},"end":{"line":100,"column":21}},"64":{"start":{"line":98,"column":24},"end":{"line":99,"column":60}},"65":{"start":{"line":101,"column":20},"end":{"line":101,"column":41}},"66":{"start":{"line":105,"column":8},"end":{"line":106,"column":28}},"67":{"start":{"line":106,"column":12},"end":{"line":106,"column":28}},"68":{"start":{"line":107,"column":8},"end":{"line":108,"column":33}},"69":{"start":{"line":108,"column":12},"end":{"line":108,"column":33}},"70":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"71":{"start":{"line":112,"column":8},"end":{"line":112,"column":52}},"72":{"start":{"line":113,"column":8},"end":{"line":113,"column":60}},"73":{"start":{"line":114,"column":8},"end":{"line":114,"column":23}},"74":{"start":{"line":115,"column":8},"end":{"line":115,"column":35}},"75":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"76":{"start":{"line":119,"column":12},"end":{"line":119,"column":60}},"77":{"start":{"line":120,"column":12},"end":{"line":120,"column":37}},"78":{"start":{"line":122,"column":8},"end":{"line":137,"column":9}},"79":{"start":{"line":123,"column":12},"end":{"line":123,"column":70}},"80":{"start":{"line":129,"column":12},"end":{"line":134,"column":13}},"81":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"82":{"start":{"line":131,"column":20},"end":{"line":131,"column":83}},"83":{"start":{"line":133,"column":16},"end":{"line":133,"column":123}},"84":{"start":{"line":136,"column":12},"end":{"line":136,"column":24}},"85":{"start":{"line":138,"column":8},"end":{"line":138,"column":45}},"86":{"start":{"line":139,"column":8},"end":{"line":139,"column":42}},"87":{"start":{"line":140,"column":8},"end":{"line":140,"column":53}},"88":{"start":{"line":141,"column":8},"end":{"line":141,"column":101}},"89":{"start":{"line":142,"column":8},"end":{"line":142,"column":88}},"90":{"start":{"line":143,"column":8},"end":{"line":143,"column":81}},"91":{"start":{"line":144,"column":8},"end":{"line":144,"column":78}},"92":{"start":{"line":145,"column":8},"end":{"line":145,"column":74}},"93":{"start":{"line":146,"column":8},"end":{"line":146,"column":92}},"94":{"start":{"line":147,"column":8},"end":{"line":147,"column":71}},"95":{"start":{"line":151,"column":8},"end":{"line":154,"column":9}},"96":{"start":{"line":152,"column":12},"end":{"line":152,"column":87}},"97":{"start":{"line":153,"column":12},"end":{"line":153,"column":69}},"98":{"start":{"line":155,"column":8},"end":{"line":155,"column":43}},"99":{"start":{"line":156,"column":8},"end":{"line":156,"column":51}},"100":{"start":{"line":159,"column":0},"end":{"line":159,"column":32}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":40}},{"start":{"line":40,"column":44},"end":{"line":40,"column":67}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},{"start":{"line":45,"column":46},"end":{"line":45,"column":69}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":16}},{"start":{"line":76,"column":16},"end":{"line":76,"column":16}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":24},"end":{"line":82,"column":24}},{"start":{"line":82,"column":24},"end":{"line":82,"column":24}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":24}},{"start":{"line":86,"column":24},"end":{"line":86,"column":24}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":16}},{"start":{"line":96,"column":16},"end":{"line":96,"column":16}}]},"12":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":97,"column":20}},{"start":{"line":97,"column":20},"end":{"line":97,"column":20}}]},"13":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":24},"end":{"line":97,"column":37}},{"start":{"line":97,"column":41},"end":{"line":97,"column":63}}]},"14":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"15":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"16":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"17":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"18":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":16}},{"start":{"line":130,"column":16},"end":{"line":130,"column":16}}]},"19":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":30},"end":{"line":144,"column":47}},{"start":{"line":144,"column":51},"end":{"line":144,"column":76}}]},"20":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const logging = require('plylog');","const commandLineArgs = require('command-line-args');","const commandLineCommands = require('command-line-commands');","const args_1 = require('./args');","const build_1 = require('./commands/build');","const help_1 = require('./commands/help');","const init_1 = require('./commands/init');","const lint_1 = require('./commands/lint');","const serve_1 = require('./commands/serve');","const test_1 = require('./commands/test');","const project_config_1 = require('./project-config');","const logger = logging.getLogger('cli.main');","process.on('uncaughtException', (error) => {","    logger.error(`Uncaught exception: ${error}`);","    if (error.stack)","        logger.error(error.stack);","    process.exit(1);","});","process.on('unhandledRejection', (error) => {","    logger.error(`Promise rejection: ${error}`);","    if (error.stack)","        logger.error(error.stack);","    process.exit(1);","});","class PolymerCli {","    constructor(args, config) {","        this.commands = new Map();","        // If the \"--quiet\"/\"-q\" flag is ever present, set our global logging","        // to quiet mode. Also set the level on the logger we've already created.","        if (args.indexOf('--quiet') > -1 || args.indexOf('-q') > -1) {","            logging.setQuiet();","        }","        // If the \"--verbose\"/\"-v\" flag is ever present, set our global logging","        // to verbose mode. Also set the level on the logger we've already created.","        if (args.indexOf('--verbose') > -1 || args.indexOf('-v') > -1) {","            logging.setVerbose();","        }","        this.args = args;","        logger.debug('got args:', { args: args });","        if (config) {","            this.defaultConfig = config;","            logger.debug('got default config from constructor argument:', { config: this.defaultConfig });","        }","        else {","            this.defaultConfig = project_config_1.ProjectConfig.fromConfigFile('polymer.json');","            logger.debug('got default config from file:', { config: this.defaultConfig });","        }","        this.addCommand(new build_1.BuildCommand());","        this.addCommand(new help_1.HelpCommand(this.commands));","        this.addCommand(new init_1.InitCommand());","        this.addCommand(new lint_1.LintCommand());","        this.addCommand(new serve_1.ServeCommand());","        this.addCommand(new test_1.TestCommand());","    }","    addCommand(command) {","        logger.debug('adding command', command.name);","        this.commands.set(command.name, command);","    }","    mergeDefinitions(command, globals) {","        let mergedArgs = new Map();","        let defaultOption = null;","        let addAll = (args) => {","            for (let definition of args) {","                let name = definition.name;","                let oldDefinition = mergedArgs.get(name);","                if (oldDefinition == null) {","                    mergedArgs.set(definition.name, definition);","                }","                else {","                    let mergedDefinition = Object.assign({}, oldDefinition);","                    for (let propName of Object.keys(definition)) {","                        if (propName === 'name')","                            continue;","                        let propValue = definition[propName];","                        let oldProp = oldDefinition[propName];","                        if (oldProp == null) {","                            mergedDefinition[propName] = propValue;","                        }","                        else {","                            throw new Error(`duplicate argument definition in ${command.name}: ${name}.${propName}`);","                        }","                    }","                    mergedArgs.set(name, mergedDefinition);","                    definition = mergedDefinition;","                }","                if (definition.defaultOption) {","                    if (defaultOption && defaultOption !== name) {","                        throw new Error(`Multiple default arguments in ${command.name}: ` +","                            `${defaultOption} and ${name}`);","                    }","                    defaultOption = name;","                }","            }","        };","        if (globals)","            addAll(globals);","        if (command.args)","            addAll(command.args);","        return Array.from(mergedArgs.values());","    }","    run() {","        let helpCommand = this.commands.get('help');","        let commandNames = Array.from(this.commands.keys());","        let parsedArgs;","        logger.debug('running...');","        // If the \"--version\" flag is ever present, just print","        // the current version. Useful for globally installed CLIs.","        if (this.args.indexOf('--version') > -1) {","            console.log(require('../package.json').version);","            return Promise.resolve();","        }","        try {","            parsedArgs = commandLineCommands(commandNames, this.args);","        }","        catch (error) {","            // Polymer CLI needs a valid command name to do anything. If the given","            // command is invalid, run the generalized help command with default","            // config. This should print the general usage information.","            if (error.name === 'INVALID_COMMAND') {","                if (error.command) {","                    logger.warn(`'${error.command}' is not an available command.`);","                }","                return helpCommand.run({ command: error.command }, new project_config_1.ProjectConfig(this.defaultConfig));","            }","            // If an unexpected error occurred, propagate it","            throw error;","        }","        let commandName = parsedArgs.command;","        let commandArgs = parsedArgs.argv;","        let command = this.commands.get(commandName);","        logger.debug(`command '${commandName}' found, parsing command args:`, { args: commandArgs });","        let commandDefinitions = this.mergeDefinitions(command, args_1.globalArguments);","        let commandOptionsRaw = commandLineArgs(commandDefinitions, commandArgs);","        let commandOptions = (commandOptionsRaw && commandOptionsRaw['_all']);","        logger.debug(`command options parsed from args:`, commandOptions);","        let config = new project_config_1.ProjectConfig(this.defaultConfig, commandOptions);","        logger.debug(`final project configuration generated:`, config);","        // Help is a special argument for displaying help for the given command.","        // If found, run the help command instead, with the given command name as","        // an option.","        if (commandOptions['help']) {","            logger.debug(`'--help' option found, running 'help' for given command...`);","            return helpCommand.run({ command: commandName }, config);","        }","        logger.debug('Running command...');","        return command.run(commandOptions, config);","    }","}","exports.PolymerCli = PolymerCli;",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"29":1,"30":0,"31":0,"32":0,"33":0,"37":0,"40":0,"41":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"93":0,"94":0,"96":0,"97":0,"98":0,"101":0,"105":0,"106":0,"107":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"118":0,"119":0,"120":0,"122":0,"123":0,"129":0,"130":0,"131":0,"133":0,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":0,"152":0,"153":0,"155":0,"156":0,"159":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/args.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/args.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":31}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"2":{"start":{"line":12,"column":0},"end":{"line":84,"column":2}},"3":{"start":{"line":18,"column":12},"end":{"line":18,"column":58}}},"branchMap":{},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const environments_1 = require('./environments/environments');","exports.globalArguments = [","    {","        name: 'env',","        description: 'The environment to use to specialize certain commands, '","            + 'like build',","        type: function (value) {","            return environments_1.buildEnvironment(value);","        },","        group: 'global',","    },","    {","        name: 'entrypoint',","        description: 'The main HTML file that will be requested for all routes.',","        group: 'global',","    },","    {","        name: 'shell',","        type: String,","        description: 'The app shell HTML import',","        group: 'global',","    },","    {","        name: 'fragment',","        type: String,","        multiple: true,","        description: 'HTML imports that are loaded on-demand.',","        group: 'global',","    },","    {","        name: 'root',","        type: String,","        description: 'The directory where your project exists. ' +","            'Defaults to the current working directory',","        group: 'global',","    },","    {","        name: 'sources',","        type: String,","        multiple: true,","        description: 'Glob(s) that match your project source files. ' +","            'Defaults to `src/**/*`.',","        group: 'global',","    },","    {","        name: 'include-dependencies',","        type: String,","        multiple: true,","        description: 'Glob(s) that match any additional dependencies not caught ' +","            'by the analyzer to include with your build.',","        group: 'global',","    },","    {","        name: 'verbose',","        description: 'turn on debugging output',","        type: Boolean,","        alias: 'v',","        group: 'global',","    },","    {","        name: 'help',","        description: 'print out helpful usage information',","        type: Boolean,","        alias: 'h',","        group: 'global',","    },","    {","        name: 'quiet',","        description: 'silence output',","        type: Boolean,","        alias: 'q',","        group: 'global',","    },","];",""],"l":{"11":1,"12":1,"18":0}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/environments/environments.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/environments/environments.js","s":{"1":1,"2":1,"3":0,"4":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"buildEnvironment","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":82}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":44}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":81}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","class EnvironmentMap extends Map {","}","// TODO(garlicnation): Bring this into polytool.ts","const environments = new EnvironmentMap();","// TODO(garlicnation): Re-enable","// environments.set('reyserve', ReyServe);","/**"," * Builds an environment with the given name."," */","function buildEnvironment(name) {","    return environments.has(name) && new (environments.get(name.toLowerCase()))();","}","exports.buildEnvironment = buildEnvironment;",""],"l":{"14":1,"20":1,"21":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/build.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/build.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":18}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":7},"end":{"line":38,"column":25}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":65}},"5":{"start":{"line":17,"column":8},"end":{"line":36,"column":10}},"6":{"start":{"line":40,"column":8},"end":{"line":40,"column":54}},"7":{"start":{"line":41,"column":8},"end":{"line":47,"column":10}},"8":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"9":{"start":{"line":49,"column":12},"end":{"line":49,"column":56}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":60}},"11":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"12":{"start":{"line":53,"column":12},"end":{"line":53,"column":57}},"13":{"start":{"line":54,"column":12},"end":{"line":54,"column":56}},"14":{"start":{"line":55,"column":12},"end":{"line":55,"column":59}},"15":{"start":{"line":57,"column":8},"end":{"line":57,"column":57}},"16":{"start":{"line":58,"column":8},"end":{"line":58,"column":43}},"17":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":23}},{"start":{"line":52,"column":27},"end":{"line":52,"column":44}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const logging = require('plylog');","let logger = logging.getLogger('cli.command.build');","class BuildCommand {","    constructor() {","        this.name = 'build';","        this.description = 'Builds an application-style project';","        this.args = [","            {","                name: 'sw-precache-config',","                defaultValue: 'sw-precache-config.js',","                description: 'Path to an sw-precache configuration to be ' +","                    'used for service worker generation.'","            },","            {","                name: 'insert-dependency-links',","                type: Boolean,","                description: 'Flatten dependency tree downloads by inserting ' +","                    'additional `<link rel=\"prefetch\">` tags into ' +","                    'entrypoint and `<link rel=\"import\">` tags into fragments and shell.'","            },","            {","                name: 'html.collapseWhitespace',","                type: Boolean,","                description: 'Collapse whitespace in HTML files'","            }","        ];","    }","    run(options, config) {","        // Defer dependency loading until this specific command is run","        const build = require('../build/build').build;","        let buildOptions = {","            swPrecacheConfig: options['sw-precache-config'],","            insertDependencyLinks: options['insert-dependency-links'],","            html: {},","            css: {},","            js: {},","        };","        if (options['html.collapseWhitespace']) {","            buildOptions.html.collapseWhitespace = true;","        }","        logger.debug('building with options', buildOptions);","        if (options.env && options.env.build) {","            logger.debug('env.build() found in options');","            logger.debug('building via env.build()...');","            return options.env.build(buildOptions, config);","        }","        logger.debug('building via standard build()...');","        return build(buildOptions, config);","    }","}","exports.BuildCommand = BuildCommand;",""],"l":{"11":1,"12":1,"15":0,"16":0,"17":0,"40":0,"41":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/help.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/help.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":26}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":24},"end":{"line":42,"column":27}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":24},"end":{"line":64,"column":34}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":26}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":21}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":63}},"11":{"start":{"line":21,"column":0},"end":{"line":29,"column":56}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":85}},"14":{"start":{"line":34,"column":8},"end":{"line":38,"column":15}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":34}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":33}},"17":{"start":{"line":43,"column":8},"end":{"line":62,"column":11}},"18":{"start":{"line":51,"column":20},"end":{"line":51,"column":80}},"19":{"start":{"line":65,"column":8},"end":{"line":78,"column":11}},"20":{"start":{"line":81,"column":8},"end":{"line":98,"column":11}},"21":{"start":{"line":82,"column":12},"end":{"line":87,"column":13}},"22":{"start":{"line":83,"column":16},"end":{"line":83,"column":97}},"23":{"start":{"line":84,"column":16},"end":{"line":84,"column":57}},"24":{"start":{"line":85,"column":16},"end":{"line":85,"column":30}},"25":{"start":{"line":86,"column":16},"end":{"line":86,"column":23}},"26":{"start":{"line":88,"column":12},"end":{"line":88,"column":61}},"27":{"start":{"line":89,"column":12},"end":{"line":94,"column":13}},"28":{"start":{"line":90,"column":16},"end":{"line":90,"column":82}},"29":{"start":{"line":91,"column":16},"end":{"line":91,"column":57}},"30":{"start":{"line":92,"column":16},"end":{"line":92,"column":30}},"31":{"start":{"line":93,"column":16},"end":{"line":93,"column":23}},"32":{"start":{"line":95,"column":12},"end":{"line":95,"column":75}},"33":{"start":{"line":96,"column":12},"end":{"line":96,"column":60}},"34":{"start":{"line":97,"column":12},"end":{"line":97,"column":26}},"35":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}}},"branchMap":{"1":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":12}},{"start":{"line":82,"column":12},"end":{"line":82,"column":12}}]},"2":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":24}},{"start":{"line":82,"column":28},"end":{"line":82,"column":44}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const chalk = require('chalk');","const commandLineUsage = require('command-line-usage');","const logging = require('plylog');","const args_1 = require('../args');","let logger = logging.getLogger('cli.command.help');","const b = chalk.blue;","const m = chalk.magenta;","const CLI_TITLE = chalk.bold.underline('Polymer-CLI');","const CLI_DESCRIPTION = 'The multi-tool for Polymer projects';","const CLI_USAGE = 'Usage: \\`polymer <command> [options ...]\\`';","const HELP_HEADER = '\\n' +","    b('   /\\\\˜˜/   ') + m('/\\\\˜˜/') + b('\\\\   ') + '\\n' +","    b('  /__\\\\/   ') + m('/__\\\\/') + b('__\\\\  ') + '  ' + CLI_TITLE + '\\n' +","    b(' /\\\\  /   ') + m('/\\\\  /') + b('\\\\  /\\\\ ') + '\\n' +","    b('/__\\\\/   ') + m('/__\\\\/  ') + b('\\\\/__\\\\') + '  ' + CLI_DESCRIPTION + '\\n' +","    b('\\\\  /\\\\  ') + m('/\\\\  /   ') + b('/\\\\  /') + '\\n' +","    b(' \\\\/__\\\\') + m('/__\\\\/   ') + b('/__\\\\/ ') + '  ' + CLI_USAGE + '\\n' +","    b('  \\\\  ') + m('/\\\\  /   ') + b('/\\\\  /  ') + '\\n' +","    b('   \\\\') + m('/__\\\\/   ') + b('/__\\\\/   ') + '\\n';","class HelpCommand {","    constructor(commands) {","        this.name = 'help';","        this.description = 'Shows this help message, or help for a specific command';","        this.args = [{","                name: 'command',","                description: 'The command to display help for',","                defaultOption: true,","            }];","        this.commands = new Map();","        this.commands = commands;","    }","    generateGeneralUsage() {","        return commandLineUsage([","            {","                content: HELP_HEADER,","                raw: true,","            },","            {","                header: 'Available Commands',","                content: Array.from(this.commands.values()).map((command) => {","                    return { name: command.name, summary: command.description };","                }),","            },","            {","                header: 'Global Options',","                optionList: args_1.globalArguments","            },","            {","                content: 'Run `polymer help <command>` for help with a specific command.',","                raw: true,","            }","        ]);","    }","    generateCommandUsage(command) {","        return commandLineUsage([","            {","                header: `polymer ${command.name}`,","                content: command.description,","            },","            {","                header: 'Command Options',","                optionList: command.args","            },","            {","                header: 'Global Options',","                optionList: args_1.globalArguments","            },","        ]);","    }","    run(options, _config) {","        return new Promise((resolve, _) => {","            if (!options || !options.command) {","                logger.debug('no command given, printing general help...', { options: options });","                console.log(this.generateGeneralUsage());","                resolve(null);","                return;","            }","            let command = this.commands.get(options.command);","            if (!command) {","                logger.error(`'${options.command}' is not an available command.`);","                console.log(this.generateGeneralUsage());","                resolve(null);","                return;","            }","            logger.debug(`printing help for command '${command.name}'...`);","            console.log(this.generateCommandUsage(command));","            resolve(null);","        });","    }","}","exports.HelpCommand = HelpCommand;",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"32":0,"33":0,"34":0,"39":0,"40":0,"43":0,"51":0,"65":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"101":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/init.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/init.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":18}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":7},"end":{"line":26,"column":26}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":59}},"5":{"start":{"line":17,"column":8},"end":{"line":24,"column":10}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":52}},"7":{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},"8":{"start":{"line":30,"column":12},"end":{"line":30,"column":44}},"9":{"start":{"line":31,"column":12},"end":{"line":31,"column":67}},"10":{"start":{"line":32,"column":12},"end":{"line":35,"column":15}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":68}},"12":{"start":{"line":38,"column":8},"end":{"line":38,"column":69}},"13":{"start":{"line":39,"column":8},"end":{"line":39,"column":54}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const logging = require('plylog');","let logger = logging.getLogger('cli.command.init');","class InitCommand {","    constructor() {","        this.name = 'init';","        this.description = 'Initializes a Polymer project';","        this.args = [","            {","                name: 'name',","                description: 'The template name to use to initialize the project',","                type: String,","                defaultOption: true,","            }","        ];","    }","    run(options, _config) {","        // Defer dependency loading until needed","        const polymerInit = require('../init/init');","        if (options.name) {","            let templateName = options.name;","            let generatorName = `polymer-init-${templateName}:app`;","            logger.debug('template name provided', {","                generator: generatorName,","                template: templateName,","            });","            return polymerInit.runGenerator(generatorName, options);","        }","        logger.debug('no template name provided, prompting user...');","        return polymerInit.promptGeneratorSelection();","    }","}","exports.InitCommand = InitCommand;",""],"l":{"11":1,"12":1,"15":0,"16":0,"17":0,"28":0,"29":0,"30":0,"31":0,"32":0,"36":0,"38":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/lint.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/lint.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":18}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":7},"end":{"line":63,"column":25}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":27}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":47}},"6":{"start":{"line":18,"column":8},"end":{"line":61,"column":10}},"7":{"start":{"line":65,"column":8},"end":{"line":65,"column":53}},"8":{"start":{"line":66,"column":8},"end":{"line":67,"column":73}},"9":{"start":{"line":67,"column":40},"end":{"line":67,"column":71}},"10":{"start":{"line":68,"column":8},"end":{"line":77,"column":9}},"11":{"start":{"line":69,"column":12},"end":{"line":70,"column":47}},"12":{"start":{"line":71,"column":12},"end":{"line":71,"column":53}},"13":{"start":{"line":72,"column":12},"end":{"line":75,"column":16}},"14":{"start":{"line":76,"column":12},"end":{"line":76,"column":37}},"15":{"start":{"line":79,"column":8},"end":{"line":79,"column":48}},"16":{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},"17":{"start":{"line":81,"column":12},"end":{"line":81,"column":38}},"18":{"start":{"line":83,"column":13},"end":{"line":85,"column":9}},"19":{"start":{"line":84,"column":12},"end":{"line":84,"column":39}},"20":{"start":{"line":86,"column":8},"end":{"line":96,"column":28}},"21":{"start":{"line":96,"column":22},"end":{"line":96,"column":26}},"22":{"start":{"line":99,"column":0},"end":{"line":99,"column":34}}},"branchMap":{"1":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":24},"end":{"line":66,"column":37}},{"start":{"line":67,"column":15},"end":{"line":67,"column":72}}]},"2":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":83,"column":13}},{"start":{"line":83,"column":13},"end":{"line":83,"column":13}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const commandLineArgs = require('command-line-args');","const logging = require('plylog');","let logger = logging.getLogger('cli.lint');","class LintCommand {","    constructor() {","        this.name = 'lint';","        this.description = 'Lints the project';","        this.args = [","            {","                name: 'input',","                type: String,","                alias: 'i',","                defaultOption: true,","                multiple: true,","                description: 'Files and/or folders to lint. Exclusive. Defaults to cwd.'","            },","            {","                name: 'policy',","                type: String,","                alias: 'p',","                description: 'Your jsconf.json policy file.',","                defaultValue: null","            },","            {","                name: 'config-file',","                type: String,","                defaultValue: 'bower.json',","                description: ('If inputs are specified, look for `config-field` in this JSON file.')","            },","            {","                name: 'config-field',","                type: String,","                defaultValue: 'main',","                description: ('If config-file is used for inputs, this field determines which ' +","                    'file(s) are linted.')","            },","            {","                name: 'follow-dependencies',","                type: Boolean,","                description: ('Follow through and lint dependencies. This is default behavior ' +","                    'when linting your entire application via the entrypoint, shell, ' +","                    'and fragment arguments.')","            },","            {","                name: 'no-follow-dependencies',","                type: Boolean,","                description: ('Only lint the files provided, ignoring dependencies. This is ' +","                    'default behavior when linting a specific list of files provided ' +","                    'via the input argument.')","            }","        ];","    }","    run(options, config) {","        // Defer dependency loading until this specific command is run","        const polylint = require('polylint/lib/cli');","        let lintFiles = options.input","            || config.inputs.map((i) => i.substring(config.root.length));","        if (lintFiles.length === 0) {","            logger.warn('No inputs specified. Please use the --input, --entrypoint, ' +","                '--shell or --fragment flags');","            let argsCli = commandLineArgs(this.args);","            console.info(argsCli.getUsage({","                title: `polymer ${this.name}`,","                description: this.description,","            }));","            return Promise.resolve();","        }","        // Default to false if input files are provided, otherwise default to true","        let followDependencies = !options.input;","        if (options['follow-dependencies']) {","            followDependencies = true;","        }","        else if (options['no-follow-dependencies']) {","            followDependencies = false;","        }","        return polylint.runWithOptions({","            input: lintFiles,","            root: config.root,","            // TODO: read into config","            bowerdir: 'bower_components',","            policy: options.policy,","            'config-file': options['config-file'],","            'config-field': options['config-field'],","            // NOTE: `no-recursion` has the opposite behavior of `follow-dependencies`","            'no-recursion': !followDependencies,","        }).then(() => null);","    }","}","exports.LintCommand = LintCommand;",""],"l":{"11":1,"12":1,"13":1,"16":0,"17":0,"18":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"76":0,"79":0,"80":0,"81":0,"83":0,"84":0,"86":0,"96":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/serve.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/serve.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":18}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":7},"end":{"line":63,"column":25}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":67}},"5":{"start":{"line":17,"column":8},"end":{"line":61,"column":10}},"6":{"start":{"line":65,"column":8},"end":{"line":65,"column":47}},"7":{"start":{"line":66,"column":8},"end":{"line":66,"column":21}},"8":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"9":{"start":{"line":68,"column":12},"end":{"line":68,"column":71}},"10":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"11":{"start":{"line":70,"column":16},"end":{"line":70,"column":31}},"12":{"start":{"line":73,"column":8},"end":{"line":82,"column":10}},"13":{"start":{"line":83,"column":8},"end":{"line":83,"column":60}},"14":{"start":{"line":84,"column":8},"end":{"line":84,"column":32}},"15":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"16":{"start":{"line":86,"column":12},"end":{"line":86,"column":57}},"17":{"start":{"line":87,"column":12},"end":{"line":87,"column":55}},"18":{"start":{"line":88,"column":12},"end":{"line":88,"column":44}},"19":{"start":{"line":90,"column":8},"end":{"line":90,"column":63}},"20":{"start":{"line":91,"column":8},"end":{"line":91,"column":52}},"21":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"branchMap":{"1":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"2":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":29}},{"start":{"line":67,"column":33},"end":{"line":67,"column":45}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":41}},{"start":{"line":69,"column":45},"end":{"line":69,"column":71}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"6":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":15}},{"start":{"line":85,"column":19},"end":{"line":85,"column":28}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const logging = require('plylog');","let logger = logging.getLogger('cli.command.serve');","class ServeCommand {","    constructor() {","        this.name = 'serve';","        this.description = 'Runs the polyserve development server';","        this.args = [","            {","                name: 'port',","                alias: 'p',","                description: 'The port to serve from. Defaults to 8080',","                type: Number,","            },","            {","                name: 'hostname',","                alias: 'H',","                description: 'The hostname to serve from. Defaults to localhost',","                type: String,","            },","            {","                name: 'package-name',","                alias: 'n',","                description: 'The package name to use for the root directory. Defaults ' +","                    'to reading from bower.json',","                type: String,","            },","            {","                name: 'open',","                alias: 'o',","                description: 'The page to open in the default browser on startup.',","                type: Boolean,","            },","            {","                name: 'browser',","                alias: 'b',","                description: 'The browser(s) to open with when using the --open option.' +","                    ' Defaults to your default web browser.',","                type: String,","                multiple: true,","            },","            {","                name: 'open-path',","                description: 'The URL path to open when using the --open option.' +","                    ' Defaults to \"index.html\".',","                type: String,","            },","            {","                name: 'root',","                defaultOption: true,","            },","        ];","    }","    run(options, config) {","        // Defer dependency loading until this specific command is run","        const polyserve = require('polyserve');","        let openPath;","        if (config.entrypoint && config.shell) {","            openPath = config.entrypoint.substring(config.root.length);","            if (openPath === 'index.html' || openPath === '/index.html') {","                openPath = '/';","            }","        }","        let serverOptions = {","            root: config.root,","            port: options.port,","            hostname: options.hostname,","            open: options.open,","            openPath: openPath,","            browser: options.browser,","            componentDir: options['component-dir'],","            packageName: options['package-name'],","        };","        logger.debug('serving with options', serverOptions);","        const env = options.env;","        if (env && env.serve) {","            logger.debug('env.serve() found in options');","            logger.debug('serving via env.serve()...');","            return env.serve(serverOptions);","        }","        logger.debug('serving via polyserve.startServer()...');","        return polyserve.startServer(serverOptions);","    }","}","exports.ServeCommand = ServeCommand;",""],"l":{"11":1,"12":1,"15":0,"16":0,"17":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"73":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"90":0,"91":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/commands/test.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":15},"end":{"line":3,"column":18}}},"2":{"name":"(anonymous_2)","line":107,"loc":{"start":{"line":107,"column":7},"end":{"line":107,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":8},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":55}},"3":{"start":{"line":6,"column":8},"end":{"line":105,"column":10}},"4":{"start":{"line":109,"column":8},"end":{"line":109,"column":52}},"5":{"start":{"line":110,"column":8},"end":{"line":110,"column":79}},"6":{"start":{"line":113,"column":0},"end":{"line":113,"column":34}}},"branchMap":{},"code":["\"use strict\";","class TestCommand {","    constructor() {","        this.name = 'test';","        this.description = 'Runs web-component-tester';","        this.args = [","            {","                name: 'persistent',","                alias: 'p',","                description: 'Keep browsers active (refresh to rerun tests)',","                type: Boolean,","            },","            {","                name: 'plugin',","                description: 'Plugins that should be loaded',","                type: String,","            },","            {","                name: 'skip-plugin',","                description: 'Configured plugins that should _not_ be loaded',","                type: String,","            },","            {","                name: 'expanded',","                description: 'Log a status line for each test run',","                type: String,","            },","            {","                name: 'simpleOutput',","                description: 'Avoid fancy terminal output',","                type: String,","            },","            {","                name: 'skip-update-check',","                description: \"Don't check for updates\",","                type: String,","            },","            {","                name: 'webserver-port',","                description: 'A port to use for the test webserver',","                type: String,","            },","            {","                name: 'color',","                description: '',","                type: String,","            },","            {","                name: 'local',","                alias: 'l',","                description: \"Local browsers to run tests on, or 'all'\",","                type: String,","            },","            {","                name: 'selenium-arg',","                description: 'Additional selenium server arguments. Port is auto-selected.',","                type: String,","            },","            {","                name: 'skip-selenium-install',","                description: 'Skip trying to install selenium',","                type: String,","            },","            {","                name: 'sauce-access-key',","                description: 'Sauce Labs access key',","                type: String,","            },","            {","                name: 'sauce',","                alias: 's',","                description: \"Remote Sauce Labs browsers to run tests on, or 'default'\",","                type: String,","            },","            {","                name: 'build-number',","                description: 'The build number tested by this test for the sauce labs REST API',","                type: String,","            },","            {","                name: 'job-name',","                description: 'Job name for the sauce labs REST API',","                type: String,","            },","            {","                name: 'port',","                description: 'Select an alternative port for Sauce Connect (default is 4445)',","                type: String,","            },","            {","                name: 'sauce-tunnel-id',","                description: 'Sauce Connect tunnel identifier',","                type: String,","            },","            {","                name: 'sauce-username',","                description: 'Sauce Labs username',","                type: String,","            },","            {","                name: 'visibility',","                description: \"Set job visibility to 'public', 'public restricted', 'share', 'team' or 'private'\",","                type: String,","            },","        ];","    }","    run(_options, _config) {","        // Defer dependency loading until this specific command is run","        const wct = require('web-component-tester');","        return wct.cli.run(process.env, process.argv.slice(3), process.stdout);","    }","}","exports.TestCommand = TestCommand;",""],"l":{"4":0,"5":0,"6":0,"109":0,"110":0,"113":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/project-config.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/lib/project-config.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":49}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":36}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":9},"end":{"line":47,"column":43}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"5":{"start":{"line":15,"column":0},"end":{"line":20,"column":2}},"6":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":80}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":52}},"9":{"start":{"line":29,"column":8},"end":{"line":45,"column":9}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":67}},"11":{"start":{"line":31,"column":12},"end":{"line":31,"column":45}},"12":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"13":{"start":{"line":36,"column":16},"end":{"line":36,"column":81}},"14":{"start":{"line":37,"column":16},"end":{"line":37,"column":23}},"15":{"start":{"line":40,"column":12},"end":{"line":43,"column":15}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":24}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":73}},"18":{"start":{"line":49,"column":8},"end":{"line":49,"column":34}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":96}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":98}},"21":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"22":{"start":{"line":53,"column":12},"end":{"line":53,"column":62}},"23":{"start":{"line":55,"column":8},"end":{"line":70,"column":9}},"24":{"start":{"line":56,"column":12},"end":{"line":56,"column":74}},"25":{"start":{"line":60,"column":12},"end":{"line":60,"column":68}},"26":{"start":{"line":61,"column":12},"end":{"line":69,"column":13}},"27":{"start":{"line":62,"column":16},"end":{"line":62,"column":105}},"28":{"start":{"line":63,"column":16},"end":{"line":63,"column":65}},"29":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"30":{"start":{"line":65,"column":20},"end":{"line":65,"column":80}},"31":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"32":{"start":{"line":72,"column":12},"end":{"line":72,"column":64}},"33":{"start":{"line":74,"column":8},"end":{"line":74,"column":28}},"34":{"start":{"line":76,"column":8},"end":{"line":76,"column":57}},"35":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":73}},"37":{"start":{"line":78,"column":45},"end":{"line":78,"column":71}},"38":{"start":{"line":80,"column":8},"end":{"line":80,"column":25}},"39":{"start":{"line":81,"column":8},"end":{"line":82,"column":46}},"40":{"start":{"line":82,"column":12},"end":{"line":82,"column":46}},"41":{"start":{"line":83,"column":8},"end":{"line":84,"column":41}},"42":{"start":{"line":84,"column":12},"end":{"line":84,"column":41}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":57}},"44":{"start":{"line":88,"column":0},"end":{"line":88,"column":38}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":29},"end":{"line":24,"column":73}},{"start":{"line":24,"column":77},"end":{"line":24,"column":79}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":27},"end":{"line":50,"column":42}},{"start":{"line":50,"column":46},"end":{"line":50,"column":65}},{"start":{"line":50,"column":69},"end":{"line":50,"column":95}}]},"5":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":35},"end":{"line":51,"column":66}},{"start":{"line":51,"column":70},"end":{"line":51,"column":97}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":16}},{"start":{"line":64,"column":16},"end":{"line":64,"column":16}}]},"9":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":20},"end":{"line":64,"column":36}},{"start":{"line":64,"column":40},"end":{"line":64,"column":76}}]},"10":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"11":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":19},"end":{"line":76,"column":35}},{"start":{"line":76,"column":39},"end":{"line":76,"column":56}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]},"13":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"14":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","\"use strict\";","const fs = require('fs');","const path = require('path');","const logging = require('plylog');","const logger = logging.getLogger('cli.project-config');","exports.defaultSourceGlobs = [","    'src/**/*',","    // NOTE(fks) 06-29-2016: `polymer-cli serve` uses a bower.json file to display","    // information about the project. The file is included here by default.","    'bower.json',","];","class ProjectConfig {","    constructor(defaultOptions, overrideOptions) {","        if (typeof defaultOptions === 'string') {","            defaultOptions = ProjectConfig.fromConfigFile(defaultOptions) || {};","        }","        this._init(defaultOptions, overrideOptions);","    }","    static fromConfigFile(filepath) {","        try {","            let configContent = fs.readFileSync(filepath, 'utf-8');","            return JSON.parse(configContent);","        }","        catch (error) {","            // swallow \"not found\" errors because they are so common / expected","            if (error.code === 'ENOENT') {","                logger.debug('no polymer config file found', { file: filepath });","                return;","            }","            // throw all other errors when a config exists but was not properly read","            logger.error('Failed to load/parse polymer config file', {","                file: filepath,","                err: error.message,","            });","            throw error;","        }","    }","    _init(defaultOptions, overrideOptions) {","        let options = Object.assign({}, defaultOptions, overrideOptions);","        this.root = process.cwd();","        this.sourceGlobs = options.sources || options.sourceGlobs || exports.defaultSourceGlobs;","        this.includeDependencies = options['include-dependencies'] || options.includeDependencies;","        if (options.root) {","            this.root = path.resolve(this.root, options.root);","        }","        if (options.entrypoint) {","            this.entrypoint = path.resolve(this.root, options.entrypoint);","        }","        else {","            // fallback","            this.entrypoint = path.resolve(this.root, 'index.html');","            try {","                let bowerConfigContent = fs.readFileSync(path.resolve(this.root, 'bower.json'), 'utf-8');","                let bowerConfig = JSON.parse(bowerConfigContent);","                if (bowerConfig.main && typeof bowerConfig.main === 'string') {","                    this.entrypoint = path.resolve(this.root, bowerConfig.main);","                }","            }","            catch (error) {","            }","        }","        if (options.shell) {","            this.shell = path.resolve(this.root, options.shell);","        }","        this.fragments = [];","        // fragment comes from command-line-args `--fragment`","        let frag = options.fragment || options.fragments;","        if (frag) {","            this.fragments = frag.map((e) => path.resolve(this.root, e));","        }","        this.inputs = [];","        if (this.entrypoint)","            this.inputs.push(this.entrypoint);","        if (this.shell)","            this.inputs.push(this.shell);","        this.inputs = this.inputs.concat(this.fragments);","    }","}","exports.ProjectConfig = ProjectConfig;",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"23":0,"24":0,"26":0,"29":0,"30":0,"31":0,"35":0,"36":0,"37":0,"40":0,"44":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"71":0,"72":0,"74":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-polymer-cli/node_modules/polymer-cli/gulpfile.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":60}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"13":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":47}},"15":{"start":{"line":32,"column":0},"end":{"line":38,"column":3}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":57}},"17":{"start":{"line":34,"column":2},"end":{"line":37,"column":29}},"18":{"start":{"line":40,"column":0},"end":{"line":46,"column":2}},"19":{"start":{"line":41,"column":2},"end":{"line":45,"column":9}},"20":{"start":{"line":48,"column":0},"end":{"line":54,"column":2}},"21":{"start":{"line":49,"column":2},"end":{"line":53,"column":9}},"22":{"start":{"line":57,"column":0},"end":{"line":62,"column":37}},"23":{"start":{"line":58,"column":2},"end":{"line":62,"column":35}},"24":{"start":{"line":64,"column":0},"end":{"line":68,"column":36}},"25":{"start":{"line":65,"column":2},"end":{"line":68,"column":34}},"26":{"start":{"line":70,"column":0},"end":{"line":86,"column":6}},"27":{"start":{"line":71,"column":2},"end":{"line":86,"column":4}},"28":{"start":{"line":78,"column":6},"end":{"line":78,"column":64}},"29":{"start":{"line":79,"column":6},"end":{"line":79,"column":73}},"30":{"start":{"line":79,"column":54},"end":{"line":79,"column":71}},"31":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"32":{"start":{"line":81,"column":8},"end":{"line":81,"column":60}},"33":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"34":{"start":{"line":84,"column":8},"end":{"line":84,"column":71}}},"branchMap":{"1":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":25},"end":{"line":78,"column":57}},{"start":{"line":78,"column":61},"end":{"line":78,"column":63}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]}},"code":["/**"," * @license"," * Copyright (c) 2016 The Polymer Project Authors. All rights reserved."," * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt"," * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt"," * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt"," * Code distributed by Google as part of the polymer project is also"," * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"," */","","'use strict';","","const depcheck = require('depcheck');","const eslint = require('gulp-eslint');","const fs = require('fs-extra');","const gulp = require('gulp');","const mergeStream = require('merge-stream');","const mocha = require('gulp-mocha');","const path = require('path');","const runSeq = require('run-sequence');","const tslint = require(\"gulp-tslint\");","const typescript = require('gulp-typescript');","","const tsProject = typescript.createProject('tsconfig.json');","","gulp.task('lint', ['tslint', 'eslint', 'depcheck']);","","gulp.task('clean', (done) => {","  fs.remove(path.join(__dirname, 'lib'), done);","});","","gulp.task('build', ['clean'], () => {","  let tsReporter = typescript.reporter.defaultReporter();","  return mergeStream(","      tsProject.src().pipe(tsProject(tsReporter)),","      gulp.src(['src/**/*', '!src/**/*.ts'])","    ).pipe(gulp.dest('lib'));","});","","gulp.task('test', ['build'], () =>","  gulp.src('test/unit/**/*_test.js', {read: false})","      .pipe(mocha({","        ui: 'tdd',","        reporter: 'spec',","      }))",");","","gulp.task('test:integration', ['build'], () =>","  gulp.src(['test/integration/**/*_test.js'], {read: false})","      .pipe(mocha({","        ui: 'tdd',","        reporter: 'spec',","      }))",");","","","gulp.task('tslint', () =>","  gulp.src('src/**/*.ts')","    .pipe(tslint({","      configuration: 'tslint.json',","    }))","    .pipe(tslint.report('verbose')));","","gulp.task('eslint', () =>","  gulp.src('test/**/*_test.js')","    .pipe(eslint())","    .pipe(eslint.format())","    .pipe(eslint.failAfterError()));","","gulp.task('depcheck', () =>","  depcheck(__dirname, {","      // \"@types/*\" dependencies are type declarations that are automatically","      // loaded by TypeScript during build. depcheck can't detect this","      // so we ignore them here.","      ignoreMatches: ['@types/*', 'vinyl']","    })","    .then((result) => {","      let invalidFiles = Object.keys(result.invalidFiles) || [];","      let invalidJsFiles = invalidFiles.filter((f) => f.endsWith('.js'));","      if (invalidJsFiles.length > 0) {","        throw new Error(`Invalid files: ${invalidJsFiles}`);","      }","      if (result.dependencies.length) {","        throw new Error(`Unused dependencies: ${result.dependencies}`);","      }","  }));",""],"l":{"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"26":0,"28":0,"29":0,"32":0,"33":0,"34":0,"40":0,"41":0,"48":0,"49":0,"57":0,"58":0,"64":0,"65":0,"70":0,"71":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0}}}